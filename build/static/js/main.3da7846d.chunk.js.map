{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","baseUrl","axios","get","then","response","data","newObject","post","id","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","i","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","e","preventDefault","noteObj","date","Date","toISOString","Math","random","length","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"4KAeeA,EAbF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACZC,EAAQF,EAAKG,UACf,qBACA,iBAEJ,OACI,qBAAIC,UAAU,OAAd,UACMJ,EAAKK,QACP,yBAAQC,QAAYL,EAApB,cAA2CC,EAA3C,WCIGK,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,qBAAKJ,UAAU,QAAf,SACGI,KCOQC,EAdA,WAMX,OACE,sBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACE,uBACA,2G,gBCVFC,EAAU,aAiBD,EAfA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCyE5BK,EAlFH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,iBAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,MAJjC,mBAITO,EAJS,KAIKC,EAJL,KAahBC,qBAPa,WACXC,IAEGlB,MAAK,SAAAmB,GACJT,EAASS,QAGC,IAEhB,IAwCMC,EAAcP,EAChBJ,EACAA,EAAMY,QAAO,SAAAtC,GAAI,OAAIA,EAAKG,aAE9B,OACE,gCACE,uCACA,cAAC,EAAD,CAAcK,QAASwB,IACvB,8BACE,yBAAQ1B,QAAS,kBAAMyB,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGO,EAAYE,KAAI,SAACvC,EAAMwC,GAAP,OACf,cAAC,EAAD,CAAcxC,KAAMA,EAAMC,iBAAkB,kBAlCzB,SAACqB,GAC1B,IAAMtB,EAAO0B,EAAMe,MAAK,SAAAC,GAAC,OAAIA,EAAEpB,KAAOA,KAChCqB,EAAW,2BAAQ3C,GAAR,IAAcG,WAAYH,EAAKG,YAEhDgC,EACQb,EAAIqB,GAAa1B,MAAK,SAAA2B,GAC5BjB,EAASD,EAAMa,KAAI,SAAAvC,GAAI,OAAIA,EAAKsB,KAAOA,EAAKtB,EAAO4C,SAEpDC,OAAM,SAAAC,GACLb,EAAgB,QAAD,OACLjC,EAAKK,QADA,qCAGf0C,YAAW,WACTd,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAAAI,GAAC,OAAIA,EAAEpB,KAAOA,SAmBkB0B,CAAmBhD,EAAKsB,MAA/DkB,QAGf,uBAAMS,SA1DM,SAACC,GACfA,EAAEC,iBACF,IAAMC,EAAU,CACd/C,QAASuB,EACTyB,MAAM,IAAIC,MAAOC,cACjBpD,UAAWqD,KAAKC,SAAW,GAC3BnC,GAAII,EAAMgC,OAAS,GAGrBvB,EACUiB,GACPnC,MAAK,SAAA2B,GACJjB,EAASD,EAAMiC,OAAOf,IACtBf,EAAW,QA6Cb,UACE,uBAAO+B,MAAOhC,EAASiC,SA1CP,SAACX,GACrBrB,EAAWqB,EAAEY,OAAOF,UA0ChB,wBAAQG,KAAK,SAAb,qBAEF,cAAC,EAAD,Q,MC/ENC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3da7846d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n    const label = note.important ?\r\n        'make not important' :\r\n        'make important'\r\n\r\n    return ( \r\n        <li className=\"note\"> \r\n            { note.content } \r\n            <button onClick = { toggleImportance } > { label } </button> \r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Note","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    const footerStyle = {\r\n      color: 'green',\r\n      fontStyle: 'italic',\r\n      fontSize: 16\r\n    }\r\n    return (\r\n      <div style={footerStyle}>\r\n        <br />\r\n        <em>Note app, Department of Computer Science, University of Helsinki 2021</em>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Footer","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update }","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\nimport noteService from './services/notes'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('a new note...')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const hook = () => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }\n  useEffect(hook, [])\n\n  const AddNote = (e) => {\n    e.preventDefault()\n    const noteObj = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notes.length + 1\n    }\n\n    noteService\n      .create(noteObj)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const handleNewNote = (e) => {\n    setNewNote(e.target.value)\n  }\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n    .update(id, changedNote).then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n    })\n    .catch(error => {\n      setErrorMessage(\n        `Note ${note.content} was already removed from server`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n      setNotes(notes.filter(n => n.id !== id))\n    })\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note, i) =>\n          <Note key={i} note={note} toggleImportance={() => toggleImportanceOf(note.id)} />\n        )}\n      </ul>\n      <form onSubmit={AddNote}>\n        <input value={newNote} onChange={handleNewNote} />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}